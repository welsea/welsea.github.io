[{"title":"图片点击放大","url":"/2018/12/27/图片点击放大/","content":"\n点击放大，再点击缩小。\n\n- html\n```html\n<div class=\"content\">\n    <img src=\"pic.png\">\n</div>\n```\n- css\n```css\n/* 这里的图片大小自己设置 */\n.content img {\n    cursor: zoom-in;\n}\n.TempContainer {\n    position:fixed; \n    display: block; \n    top:0%; \n    left:0%; \n    height:100%; \n    width:100%; \n    z-index:99999999; \n    background: rgba(255, 255, 255,0.8); \n    overflow: auto; \n    display:-webkit-box; \n    -webkit-box-align:center; \n    -webkit-box-pack:center; \n    display:-moz-box; \n    -moz-box-align:center; \n    -moz-box-pack:center; \n    display:-o-box; \n    -o-box-align:center; \n    -o-box-pack:center; \n    display:-ms-box; \n    -ms-box-align:center; \n    -ms-box-pack:center; \n    display:box; \n    box-align:center; \n    box-pack:center;\n}\n.TempContainer img {\n    clear: both;  \n    display: block; \n    margin:auto; \n    cursor: zoom-out;\n}\n```\n- js\n```js\nvar ImgsTObj = $('.content img');\n    if(ImgsTObj){\n        $.each(ImgsTObj,function(){\n            $(this).click(function(){\n            var currImg = $(this);\n            // CoverLayer(0);\n            var TempContainer = $('<div class=\"TempContainer\"></div>');\n            with(TempContainer){\n                appendTo(\"body\");\n                    //css('top',currImg.offset().top);\n                html('<img border=0  src=\"' + currImg.attr('src') + '\">');\n                //不需要蒙层效果不用加\n                $('#bd').css('overflow','hidden')\n                // document.getElementById('bd').style.overflow=\"hidden\";\n            }\n            TempContainer.click(function(){\n                $(this).remove();\n                //不需要蒙层效果不用加\n                $('#bd').css('overflow','auto')\n                // document.getElementById('bd').style.overflow=\"auto\";\n                // CoverLayer(0);\n                });\n            });\n        });\n    }else{\n        return false;\n    }\n```","tags":["js"]},{"title":"输入时提示和自动补全","url":"/2018/12/24/输入时提示和自动补全/","content":"\n\n其实jQuery UI有autocomplete，但是和公司现在的项目不知道怎么就冲突了（。于是使用了最原始的js来实现。\n\n- html\n```html\n<div class=\"autocomplete\">\n    <input id=\"myInput\" autocomplete=\"off\" type=\"text\" name=\"area\" placeholder=\"Name\">\n</div>\n```\n- css\n```css\n#myInput{\n    line-height: 20px;\n    font-size: 14px;\n    box-shadow: 0px 0px 2px 0px rgba(170, 170, 170, 1);\n    font-family: Arial;\n    border: 1px solid rgba(255, 255, 255, 0);\n    padding: 10px 25px 10px 10px;\n    margin: 0 0 3% 0;\n    border-radius: 5px;\n    width: 70%;\n    color:#848484;\n}\n.autocomplete{\n    width: 40%;\n}\n.select-list{\n    display: flex;\n    justify-content: flex-start;\n}\n.autocomplete-items {\n    background-color: #fff;\n    padding: 3px;\n    position: absolute;\n    border: 1px solid rgba(255, 255, 255, 0);\n    box-shadow: 0px 0px 2px 0px rgba(170, 170, 170, 1);\n    color: #848484;\n    z-index: 999999;\n    /* position the autocomplete items to be the same width as the container: */\n\n}\n```\n- js\n```js\n  function autocomplete(inp, arr) {\n    /*the autocomplete function takes two arguments,\n    the text field element and an array of possible autocompleted values:*/\n    var currentFocus;\n    /*execute a function when someone writes in the text field:*/\n    inp.addEventListener(\"input\", function(e) {\n        var a, b, i, val = this.value;\n        /*close any already open lists of autocompleted values*/\n        closeAllLists();\n        if (!val) { return false;}\n        currentFocus = -1;\n        /*create a DIV element that will contain the items (values):*/\n        a = document.createElement(\"DIV\");\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n        a.setAttribute(\"class\", \"autocomplete-items\");\n        /*append the DIV element as a child of the autocomplete container:*/\n        this.parentNode.appendChild(a);\n        /*for each item in the array...*/\n        for (i = 0; i < arr.length; i++) {\n          /*check if the item starts with the same letters as the text field value:*/\n          if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n            /*create a DIV element for each matching element:*/\n            b = document.createElement(\"DIV\");\n            /*make the matching letters bold:*/\n            b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\n            b.innerHTML += arr[i].substr(val.length);\n            /*insert a input field that will hold the current array item's value:*/\n            b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n            /*execute a function when someone clicks on the item value (DIV element):*/\n                b.addEventListener(\"click\", function(e) {\n                /*insert the value for the autocomplete text field:*/\n                inp.value = this.getElementsByTagName(\"input\")[0].value;\n                /*close the list of autocompleted values,\n                (or any other open lists of autocompleted values:*/\n                closeAllLists();\n            });\n            a.appendChild(b);\n          }\n        }\n    });\n    /*execute a function presses a key on the keyboard:*/\n    inp.addEventListener(\"keydown\", function(e) {\n        var x = document.getElementById(this.id + \"autocomplete-list\");\n        if (x) x = x.getElementsByTagName(\"div\");\n        if (e.keyCode == 40) {\n          /*If the arrow DOWN key is pressed,\n          increase the currentFocus variable:*/\n          currentFocus++;\n          /*and and make the current item more visible:*/\n          addActive(x);\n        } else if (e.keyCode == 38) { //up\n          /*If the arrow UP key is pressed,\n          decrease the currentFocus variable:*/\n          currentFocus--;\n          /*and and make the current item more visible:*/\n          addActive(x);\n        } else if (e.keyCode == 13) {\n          /*If the ENTER key is pressed, prevent the form from being submitted,*/\n          e.preventDefault();\n          if (currentFocus > -1) {\n            /*and simulate a click on the \"active\" item:*/\n            if (x) x[currentFocus].click();\n          }\n        }\n    });\n    function addActive(x) {\n      /*a function to classify an item as \"active\":*/\n      if (!x) return false;\n      /*start by removing the \"active\" class on all items:*/\n      removeActive(x);\n      if (currentFocus >= x.length) currentFocus = 0;\n      if (currentFocus < 0) currentFocus = (x.length - 1);\n      /*add class \"autocomplete-active\":*/\n      x[currentFocus].classList.add(\"autocomplete-active\");\n    }\n    function removeActive(x) {\n      /*a function to remove the \"active\" class from all autocomplete items:*/\n      for (var i = 0; i < x.length; i++) {\n        x[i].classList.remove(\"autocomplete-active\");\n      }\n    }\n    function closeAllLists(elmnt) {\n      /*close all autocomplete lists in the document,\n      except the one passed as an argument:*/\n      var x = document.getElementsByClassName(\"autocomplete-items\");\n      for (var i = 0; i < x.length; i++) {\n        if (elmnt != x[i] && elmnt != inp) {\n        x[i].parentNode.removeChild(x[i]);\n      }\n    }\n  }\n  /*execute a function when someone clicks in the document:*/\n  document.addEventListener(\"click\", function (e) {\n      closeAllLists(e.target);\n  });\n  }\n\n  var names=['Anna','Bob','Cavin','Parcy','Mark','Leia','David','Martin','Ryan','Anakin','Luke','Sirius','James'];\n  autocomplete(document.getElementById(\"myInput\"), names);\n  ```","tags":["js"]},{"title":"select的点击事件","url":"/2018/12/22/select的点击事件/","content":"\n## 下拉选择\\<select\\>的点击事件\n\nhtml为\n```html\n<select id=\"sort-by\">\n    <option>Sort by</option>\n    <option value=\"Hotest\">Hotest</option>\n    <option value=\"Newest\">Newest</option>\n    <option value=\"Rarest\">Rarest</option>\n</select>\n```\n如果给option绑定click事件是没有用的，给select绑定click事件则会在选中option之前就触发。<br/>\n需要给select绑定onchange事件。代码如下：\n```js\n$('#sort-by').change(function(){\n    console.log($(this).val())\n})\n```\n这个时候console.log打印出来的就是选中的option的值啦。\n","tags":["js","jQuery"]},{"title":"ios(safari)修改input和select默认样式","url":"/2018/12/22/ios修改input和select默认样式/","content":"## 标题都不想写（\n```css\ninput{\n    -webkit-appearance: none;\n}\nselect{\n    -webkit-appearance: none;\n}\n```\n但是因为这样就没有小三角了，于是在背景加一个小三角图片\n```css\nselect{\n    -webkit-appearance: none；\n    background: url('../img/select_down.png') no-repeat right;\n    background-size: 15px;\n    background-position-x: 96%;\n}\n\n```","tags":["css"]},{"title":"url传值和获取url中的值","url":"/2018/12/08/url传值和获取url中的值/","content":"# 获取URL里的值。\n- 例如URL为： \n    `http://local.tc.com/index.php?s=/question/index/detail/id/1 `\n\n    <br/>\n    可以使用`{$_GET.id}`来获取值为1的id。\n\n- php代码如`{$vo.id}`在jQuery中不适用，应该改为`${jQuery的数组.id}`，例如\n    ```js\n    $.ajax({\n        dataType: \"json\",\n        url: \"{:U('Question/Index/detail')}\" + '&id=' + id + '&p=' + p,\n        type: \"get\",\n        success: function (data) {\n            console.log(data);\n            var list = data.data.answer_list;\n            for (var i = list.length - 1; i >= 0; i--) {\n                var html = '';\n                for (var j = list[i].comment_lists.length - 1; j >= 0; j--) {\n                    let cert = '';\n                    if (list[i].user.cert_info.title) {\n                        cert = `<div class=\"icon cert\"></div>\n                        <span id=\"cert\">${list[i].user.cert_info.title}</span>`\n                    };\n                    ......\n                }\n            }\n        }\n    });\n    ```\n\n# 页面跳转时传值\n- 使用`<a href=\"...\">`跳转页面时传值。\n    ```html\n    <a href=\"{:U('Question/Index/add',array('draft_id'=>$vo['id']))}\">...</a>\n    ```\n","tags":["jQuery","php"]},{"title":"jQuery遍历","url":"/2018/12/08/jQuery遍历/","content":"- 如，点击button展开相应的div:\n    ```html\n    <button class=\"close\" > close</button> \n    <div class\"display hidden\"> Show <div>\n\n    <button class=\"close\" > close</button> \n    <div class\"display hidden\"> Show <div>\n\n    <button class=\"close\" > close</button> \n    <div class\"display hidden\"> Show <div>\n\n    ```\n\n    有三个类名一样的组合，这时添加点击事件等会混淆，此时可以添加`data-id`\n    ```html\n    <button class=\"close\" data-id=\"1\" > close</button> \n    <div class\"display hidden\" data-id=\"1\"> Show <div>\n\n    <button class=\"close\" data-id=\"2\" > close</button> \n    <div class\"display hidden\" data-id=\"2\"> Show <div>\n\n    <button class=\"close\" data-id=\"3\"> close</button> \n    <div class\"display hidden\" data-id=\"3\"> Show <div>\n\n    ```\n    遍历的时候就是，当data-id相同才会触发事件\n    ```js\n    $('.close').click(function(){\n        let id=$(this).data('id');\n        $('display').each(function(index,element){\n            if(($(element).data('id'))===id){\n                $(element).toggleClass('hidden');\n            }\n        })\n    })\n    ```\n- 有在初始页面渲染后又加入的标签，比如f7的popup和无限滚动等，是在触发某一事件之后再生成的元素，此时如果对其添加事件，应该用.on()\n    - 比如\n    ```js\n    $(document).on('click','.test',function(){...})\n    ```\n    - 或者\n    ```js\n    $('.test').on(......)\n    ```","tags":["jQuery"]},{"title":"点击加载更多","url":"/2018/12/04/点击加载更多/","content":"# ajax一次全部加载，分批显示，点击加载更多\n\n- 我需要的点击More之后加载12个。\n- 其实就是加了一层page，比如原来的html为\n    ```html\n    <div class=\"list\">\n    </div>\n    ```\n    现在就是\n    ```html\n    <div class=\"list\">\n        <div class=\"page\">\n        </div>\n    </div>\n    ```\n1. 在调取全部数据的时候，在append之前加一个判断，先创建（总数/12）个page\n    ```js\n    //遍历的变量为i\n    if(i/12===0){\n        let page='<div class=\"page-\"'+parseInt(i/12)+'\"></div>;\n        $('.list').append(page);\n    }\n    ```\n2. 然后将各个元素append进他应该在的page\n    ```js\n    let item='<span class=\"item-'+i+'\"></span>';\n    $('.page-'+parseInt( i / 12)).append(item);\n    ```\n3. 之后在除最后一个page之外的page都加上more按钮\n    ```js\n    for (let n = 0; n < $('.list').children('.page').length - 1; n++) {\n        let more = '<button id=\"more-' + n +'\" class=\"more-btn button\">More</button>';\n        $('.list').children('.page-' + n).append(more);\n    }\n    ```\n4. 默认只显示第一个page\n    ```js\n    for (let n = 1; n < $('.list').children('.page').length; n++) {\n        $('.list').children('.page-' + n).addClass('hidden');\n    }\n    \n    ```\n5. 点击more按钮之后加载下一页。\n    ```js\n    $('.more').click(function(){\n        let num = $(this).attr('id').split('-');\n        let n = parseInt(num[1]) + 1;\n        let id = 'page-' + n;\n        //如果这个more按钮的父元素（也就是他的page）的下一个兄弟节点（就是下一个page）的id和n相等，则移除这个more按钮和下一个page的hidden类。\n        if ($(this).parent().attr('id') === id) {\n            $(this).parent().next().removeClass('hidden');\n            $(this).remove();\n        } else {\n            console.log('error')；\n        }\n    });\n    ```\n\n### 写在项目中的代码\n- html\n```html\n<div class=\"country-list\">\n</div>\n```\n- jquery\n```js\n $.ajax({\n    type: 'post',\n    url: url, \n    dataType: 'json', \n    data: {},\n    success: function (data) {\n        var list = [];\n        $.each(data, function (i, item) { //循环得出洲名\n            list.push(item.chau);\n            var aa = '<div id=\"' + item.s_name + '\">' +\n                '<div class=\"chau\">' + item.chau +\n                '<div class=\"icon open\"></div></div>' +\n                '<div class=\"list hidden\" id=\"item' + i +\n                '\">';\n            $(\".country-list\").append(aa);\n            $.each(item['countries'], function (j, item2) { //循环得出国家\n                if (j % 12 === 0) {\n                    let page = '<div class=\"my-page\" id=\"' + item.s_name +\n                        '-page-' + (j / 12) +\n                        '\"></div>';\n                    $('#item' + i).append(page);\n                }\n                //国家\n                let bb = '<span class=\"item not-selected\" id=\"' + item2[\n                        \"name\"] +\n                    '\" data-id=' + j + '>' + item2[\"name\"] +\n                    '</span>';\n                $('#item' + i).children('#' + item.s_name + '-page-' + parseInt(\n                    j / 12)).append(bb);\n            });\n            //加入more按钮，第一个和最后一个page不加。\n            for (let n = 0; n < $('#item' + i).children('.my-page').length - 1; n++) {\n                let more = '<div class=\"more\"><a id=\"' + item.s_name + '-more-' + n +\n                    '\" class=\"more-btn button\">More</a></div>';\n                $('#item' + i).children('#' + item.s_name + '-page-' + n).append(more);\n            }\n            //默认只显示第一个page\n            for (let n = 1; n < $('#item' + i).children('.my-page').length; n++) {\n                $('#item' + i).children('#' + item.s_name + '-page-' + n).addClass(\n                    'hidden')\n            }\n        });\n        //country\n        $('.item').click(function () {\n            $(this).each(function (index, element) {\n                $(element).toggleClass('selected');\n            });\n        });\n        //展开城市列表\n        $('.chau').click(function () {\n            $(this).each(function (index, element) {\n                $(element).children('.icon').toggleClass('turn');\n                $(element).siblings('.list').toggleClass('hidden');\n                $(element).siblings('.all').toggleClass('hidden');\n            });\n        });\n        //点击加载更多\n        $('.more').click(function () {\n            let num = $(this).children('.more-btn').attr('id').split('-');\n            let num2 = parseInt(num[2]) + 1;\n            let id = num[0] + '-page-' + num2;\n            if ($(this).parent().next().attr('id') === id) {\n                $(this).parent().next().removeClass('hidden');\n                $(this).remove();\n            } else {\n                console.log('error')\n            }\n        });\n    },\n    error: function (errorMsg) {\n        //请求失败时执行该函数\n        alert(\"发生错误!\");\n    }\n});\n ```","tags":["jQuery","ajax"]},{"title":"使用GMap API","url":"/2018/11/26/使用GMapAPI/","content":"# G-Map使用\n\n- 首先引入\n```html\n<script async defer src=\"https://maps.googleapis.com/maps/api/js?key=Your-Key&callback=initMap\">\n```\n其中的`key=your-key`需要去申请。\n\n- 主要代码\n```js\n function initMap() {\n      // initialize map\n      //center:新建地图时的中心\n      //zoom：地图的缩放等级，越大越详细\n      //连着的三个：全屏按钮、缩放按钮、街景按钮\n      var map = new google.maps.Map(document.getElementById(\"map-canvas\"), {\n        center: new google.maps.LatLng(40.731, -73.997),\n        zoom: 6,\n        fullscreenControl: false,\n        zoomControl: true,\n        streetViewControl: false,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      });\n      // initialize marker\n      //标记（小红点），可拖动\n      var marker = new google.maps.Marker({\n        position: map.getCenter(),\n        draggable: true,\n        map: map\n      });\n      // intercept map and marker movements\n      //小标记的初始位置。\n      google.maps.event.addListener(map, \"idle\", function () {\n        marker.setPosition(map.getCenter());\n        document.getElementById(\"LatLng\").value = map.getCenter().lat().toFixed(6) + \",\" + map.getCenter().lng().toFixed(\n          6);\n      });\n      google.maps.event.addListener(marker, \"dragend\", function (mapEvent) {\n        map.panTo(mapEvent.latLng);\n      });\n      // initialize geolocation\n      //自动定位\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          map.setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));\n        }, function () {\n          document.getElementById('now').innerHTML =\n            \"Sorry, geolocation API failed to detect your location.Please drag the mark to select your location.\";\n        });\n      }\n      var geocoder = new google.maps.Geocoder;\n      var infowindow = new google.maps.InfoWindow;\n      document.getElementById('select').addEventListener('click', function () {\n        geocodeLatLng(geocoder, map, infowindow);\n      });\n    }\n    // initialize geocoder\n    //根据小标记拖动后的经纬度，转换为地点。\n    function geocodeLatLng(geocoder, map, infowindow) {\n      var input = document.getElementById('LatLng').value;\n      var latlngStr = input.split(',', 2);\n      var latlng = {\n        lat: parseFloat(latlngStr[0]),\n        lng: parseFloat(latlngStr[1])\n      };\n      geocoder.geocode({\n        'location': latlng\n      }, function (results, status) {\n        if (status === 'OK') {\n          if (results[0]) {\n            map.setZoom(10);\n            /* var marker = new google.maps.Marker({\n              position: latlng,\n              map: map\n            }); */\n            var length = results[0].address_components.length;\n            //选中地点后显示在页面上并且传给另一个...项目中的需求，不多叙述\n            // for (var j = 0; j < length; j++) {\n            //   if ((results[0].address_components[j].types[0] === 'locality') &&\n            //     (results[0].address_components[j].types[1] === 'political')) {\n            //     var city = results[0].address_components[j].long_name;\n            //     document.getElementById('now').innerHTML = \"Your location:\" + city;\n            //     document.getElementById('city_pop').value = city;\n            //   }\n            //   if ((results[0].address_components[j].types[0] === 'country') &&\n            //     (results[0].address_components[j].types[1] === 'political')) {\n            //     var country = results[0].address_components[j].long_name;\n            //     document.getElementById('country_').innerHTML = \",\" + country;\n            //     document.getElementById('country_pop').value = country;\n            //   }\n            // }\n          } else {\n            window.alert('Please try again.');\n          }\n        } else {\n          window.alert('Geocoder failed due to: ' + status);\n        }\n      });\n    }\n```","tags":["js","GMap"]},{"title":"横向滚动","url":"/2018/11/15/横向滚动/","content":"# 横向滚动\n- css：\n```css\n.scroll-list{\n    overflow-x: scroll;\n    white-space: nowrap;\n    overflow-y: hidden;\n}\n.list-item{\n    display:inline-block;\n    width:20%;\n}\n\n```\n- html\n```html\n<div class=\"scroll-list\">\n    <div class=\"list-item\">\n        test\n    </div>\n</div>\n```","tags":["css","html"]}]